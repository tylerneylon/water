# 64.water
#
# Test products and sums.
#

>
  number -> "[1-9][0-9]*" | '0'
    value: return int(val(self))
  variable -> "[a-zA-Z]+"
    value: return env.symbols[val(self)]
  atom -> number | variable
  power -> atom '^' power | atom
    value:
      if or_index == 0:
        return atom.value() ** power.value()
      else:
        return atom.value()
  product -> power+'*'
    value:
      v = 1
      for p in power_list: v *= p.value()
      return v
  sum -> product+'+'
    value:
      v = 0
      for p in product_list: v += p.value()
      return v
  statement -> (" *")sum
    : print('value of %s is %d' % (src(self), self.value()))

1
1 + 1
1 + 2 * 3
1 + 2 * 3 ^ 4
2^2 + 2 * 2^2
